Resources:
  ConversationTable75C14D21:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: conversationId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: conversationId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ChatApiStack/ConversationTable/Resource
  DirectMessageTable9554018F:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: conversationId
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: conversationId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ChatApiStack/DirectMessageTable/Resource
  UserConversationTable49EB8B67:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: conversationId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: conversationId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: conversationId-index
          KeySchema:
            - AttributeName: conversationId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ChatApiStack/UserConversationTable/Resource
  DirectMessageConversationTable4AA78A41:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: userPairId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: userPairId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ChatApiStack/DirectMessageConversationTable/Resource
  LambdaExecutionRoleD5C26073:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatApiStack/LambdaExecutionRole/Resource
  LambdaExecutionRoleDefaultPolicy6D69732F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConversationTable75C14D21
                  - Arn
              - Fn::GetAtt:
                  - DirectMessageTable9554018F
                  - Arn
              - Fn::GetAtt:
                  - UserConversationTable49EB8B67
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - UserConversationTable49EB8B67
                        - Arn
                    - /index/conversationId-index
              - Fn::GetAtt:
                  - DirectMessageConversationTable4AA78A41
                  - Arn
        Version: "2012-10-17"
      PolicyName: LambdaExecutionRoleDefaultPolicy6D69732F
      Roles:
        - Ref: LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: ChatApiStack/LambdaExecutionRole/DefaultPolicy/Resource
  lambdaModuleE2C8C55A:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameterscd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15S3Bucket8A718BE6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15S3VersionKey98B77AA4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15S3VersionKey98B77AA4
      CompatibleRuntimes:
        - nodejs12.x
      LayerName: chatLayer
    Metadata:
      aws:cdk:path: ChatApiStack/lambdaModule/Resource
      aws:asset:path: /Users/ylee/pagenow/chat-api/src/layer
      aws:asset:property: Content
  createconversationAF5C4C2E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3S3Bucket2DB0068C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3S3VersionKey9E40B7AA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3S3VersionKey9E40B7AA
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Handler: create_conversation.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
    DependsOn:
      - LambdaExecutionRoleDefaultPolicy6D69732F
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: ChatApiStack/create_conversation/Resource
      aws:asset:path: /Users/ylee/pagenow/chat-api/src/functions/create_conversation
      aws:asset:property: Code
  ChatAPIApiLogsRole65906F60:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/ApiLogsRole/Resource
  ChatAPID12E9E7A:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name: ChatAPI
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
            - ChatAPIApiLogsRole65906F60
            - Arn
        FieldLogLevel: ALL
      UserPoolConfig:
        AwsRegion:
          Ref: AWS::Region
        DefaultAction: ALLOW
        UserPoolId: us-east-1_014HGnyeu
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/Resource
  ChatAPISchemaE04B1A3A:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      Definition: |
        schema {
          query: Query
          mutation: Mutation
          subscription: Subscription
        }
        type Conversation {
          conversationId: ID!
          name: String!
          createdAt: String
          messages(after: String first: Int): DirectMessageConnection
        }
        type DirectMessage {
          senderId: ID!
          recipientId: ID!
          content: String!
          conversationid: ID!
          createdAt: String
          messageId: ID!
          isSent: Boolean
          isRead: Boolean
        }
        type DirectMessageConnection {
          messages: [DirectMessage]
          nextToken: String
        }
        type UserConversation {
          conversation: Conversation
          conversationId: ID!
          userId: ID!
        }
        type UserConversationConnection {
          nextToken: String
          userConversations: [UserConversation]
        }
        type DirectMessageConversation {
          userPairId: ID!
          conversationId: String
        }
        type ConversationId {
          conversationId: ID!
        }
        type Query {
          allDirectMessages(after: String conversationId: ID! first: Int): [DirectMessage]
          allDirectMessagesConnection(after: String conversationId: ID! first: Int): DirectMessageConnection
          allDirectMessagesFrom(after: String conversationId: ID! first: Int senderId: String!): [DirectMessage]
          directMessageConversation(userPairId: ID!): DirectMessageConversation
        }
        type Mutation {
          createConversation(recipientId: ID! name: String!): ConversationId
          createDirectMessage(content: String conversationId: ID! createdAt: String! messageId: ID! recipientId: ID!): DirectMessage
          createUserConversation(conversationId: ID! userId: ID!): UserConversation
        }
        type Subscription {
          subscribeToNewMessage(recipientId: ID!): DirectMessage
          @aws_subscribe(mutations: ["createDirectMessage"])
          subscribeToNewUserConversation(userId: ID!): UserConversation
          @aws_subscribe(mutations: ["createUserConversation"])
        }
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/Schema
  ChatAPIconversationDSServiceRole6D2F793A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/conversationDS/ServiceRole/Resource
  ChatAPIconversationDSServiceRoleDefaultPolicyA9C77245:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConversationTable75C14D21
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: ChatAPIconversationDSServiceRoleDefaultPolicyA9C77245
      Roles:
        - Ref: ChatAPIconversationDSServiceRole6D2F793A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/conversationDS/ServiceRole/DefaultPolicy/Resource
  ChatAPIconversationDS8E85B190:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      Name: conversationDS
      Type: AMAZON_DYNAMODB
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: ConversationTable75C14D21
      ServiceRoleArn:
        Fn::GetAtt:
          - ChatAPIconversationDSServiceRole6D2F793A
          - Arn
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/conversationDS/Resource
  ChatAPIconversationDSUserConversationconversationResolver9B8DA0CB:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: conversation
      TypeName: UserConversation
      DataSourceName: conversationDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "GetItem",
                "key" : {
                    "id" : { "S" : "${context.source.conversationId}" }
                }
            }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ChatAPIconversationDS8E85B190
      - ChatAPISchemaE04B1A3A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/conversationDS/UserConversationconversationResolver/Resource
  ChatAPImessageDSServiceRole5B01BD53:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/ServiceRole/Resource
  ChatAPImessageDSServiceRoleDefaultPolicyF7CC4593:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DirectMessageTable9554018F
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: ChatAPImessageDSServiceRoleDefaultPolicyF7CC4593
      Roles:
        - Ref: ChatAPImessageDSServiceRole5B01BD53
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/ServiceRole/DefaultPolicy/Resource
  ChatAPImessageDS835C5182:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      Name: messageDS
      Type: AMAZON_DYNAMODB
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: DirectMessageTable9554018F
      ServiceRoleArn:
        Fn::GetAtt:
          - ChatAPImessageDSServiceRole5B01BD53
          - Arn
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/Resource
  ChatAPImessageDSMutationcreateDirectMessageResolver1A7CBFE2:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: createDirectMessage
      TypeName: Mutation
      DataSourceName: messageDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "PutItem",
                "key" : {
                    "conversationId" : { "S" : "${context.arguments.conversationId}" }
                },
                "attributeValues" : {
                    "senderId": { "S": "${context.identity.sub}" },
                    "recipientId": { "S": "${context.arguments.recipientId}" }
                    "conversationId": { "S": "${context.arguments.conversationId}" },
                    "content": { "S": "${context.arguments.content}" },
                    "createdAt": { "S": "${context.arguments.createdAt}" },
                    "id": { "S": "${context.arguments.id}" },
                    "isSent": { "BOOL": true }
                    "isRead": { "BOOL": false }
                }
            }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ChatAPImessageDS835C5182
      - ChatAPISchemaE04B1A3A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/MutationcreateDirectMessageResolver/Resource
  ChatAPImessageDSQueryallDirectMessagesConnectionResolverA6C9EF55:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: allDirectMessagesConnection
      TypeName: Query
      DataSourceName: messageDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "Query",
                "query" : {
                    "expression": "conversationId = :conversationId",
                    "expressionValues" : {
                        ":conversationId" : {
                            "S" : "${context.arguments.conversationId}"
                        }
                    }
                },
                "scanIndexForward": false,
                "limit": #if(${context.arguments.first}) ${context.arguments.first} #else 20 #end,
                "nextToken": #if(${context.arguments.after}) "${context.arguments.after}" #else null #end
            }
      ResponseMappingTemplate: |2
        
            {
                "messages": $utils.toJson($context.result.items),
                "nextToken": #if(${context.result.nextToken}) "${context.result.nextToken}" #else null #end
            }
    DependsOn:
      - ChatAPImessageDS835C5182
      - ChatAPISchemaE04B1A3A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/QueryallDirectMessagesConnectionResolver/Resource
  ChatAPImessageDSQueryallDirectMessagesResolverE08590C0:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: allDirectMessages
      TypeName: Query
      DataSourceName: messageDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "Query",
                "query" : {
                    "expression": "conversationId = :id",
                    "expressionValues" : {
                        ":id" : {
                            "S" : "${context.arguments.conversationId}"
                        }
                    }
                },
                "limit": #if(${context.arguments.first}) ${context.arguments.first} #else 20 #end,
                "nextToken": #if(${context.arguments.after}) "${context.arguments.after}" #else null #end
            }
      ResponseMappingTemplate: $util.toJson($ctx.result.items)
    DependsOn:
      - ChatAPImessageDS835C5182
      - ChatAPISchemaE04B1A3A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/QueryallDirectMessagesResolver/Resource
  ChatAPImessageDSQueryallDirectMessagesFromResolverEC6B3C14:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: allDirectMessagesFrom
      TypeName: Query
      DataSourceName: messageDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "Query",
                "query" : {
                    "expression": "conversationId = :id and senderId = :senderId",
                    "expressionValues" : {
                        ":id" : {
                            "S" : "${context.arguments.conversationId}"
                        },
                        ":senderId" : {
                            "S" : "${context.arguments.senderId}"
                        }
                    }
                },
                "limit": #if(${context.arguments.first}) ${context.arguments.first} #else 20 #end,
                "nextToken": #if(${context.arguments.after}) "${context.arguments.after}" #else null #end
            }
      ResponseMappingTemplate: $util.toJson($ctx.result.items)
    DependsOn:
      - ChatAPImessageDS835C5182
      - ChatAPISchemaE04B1A3A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/messageDS/QueryallDirectMessagesFromResolver/Resource
  ChatAPIuserConversationDSServiceRole53B5B2EE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userConversationDS/ServiceRole/Resource
  ChatAPIuserConversationDSServiceRoleDefaultPolicyDA11A1F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - UserConversationTable49EB8B67
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - UserConversationTable49EB8B67
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ChatAPIuserConversationDSServiceRoleDefaultPolicyDA11A1F6
      Roles:
        - Ref: ChatAPIuserConversationDSServiceRole53B5B2EE
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userConversationDS/ServiceRole/DefaultPolicy/Resource
  ChatAPIuserConversationDSB89FD89A:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      Name: userConversationDS
      Type: AMAZON_DYNAMODB
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: UserConversationTable49EB8B67
      ServiceRoleArn:
        Fn::GetAtt:
          - ChatAPIuserConversationDSServiceRole53B5B2EE
          - Arn
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userConversationDS/Resource
  ChatAPIuserConversationDSMutationcreateUserConversationResolver10314CCE:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: createUserConversation
      TypeName: Mutation
      DataSourceName: userConversationDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "PutItem",
                "key": {
                    "userId": { "S" : "${context.arguments.userId}"},
                    "conversationId": { "S" : "${context.arguments.conversationId}"}
                },
                "attributeValues" : {
                    "userId": {  "S": "${context.arguments.userId}" },
                    "conversationId": {  "S": "${context.arguments.conversationId}" }
                }
            }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ChatAPISchemaE04B1A3A
      - ChatAPIuserConversationDSB89FD89A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userConversationDS/MutationcreateUserConversationResolver/Resource
  ChatAPIuserPairConversationDSServiceRole5FA54A76:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userPairConversationDS/ServiceRole/Resource
  ChatAPIuserPairConversationDSServiceRoleDefaultPolicy39994084:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DirectMessageConversationTable4AA78A41
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: ChatAPIuserPairConversationDSServiceRoleDefaultPolicy39994084
      Roles:
        - Ref: ChatAPIuserPairConversationDSServiceRole5FA54A76
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userPairConversationDS/ServiceRole/DefaultPolicy/Resource
  ChatAPIuserPairConversationDS1CD48A8A:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      Name: userPairConversationDS
      Type: AMAZON_DYNAMODB
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: DirectMessageConversationTable4AA78A41
      ServiceRoleArn:
        Fn::GetAtt:
          - ChatAPIuserPairConversationDSServiceRole5FA54A76
          - Arn
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userPairConversationDS/Resource
  ChatAPIuserPairConversationDSQuerydirectMessageConversationResolverCC359838:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: directMessageConversation
      TypeName: Query
      DataSourceName: userPairConversationDS
      Kind: UNIT
      RequestMappingTemplate: |2
        
            {
                "version" : "2017-02-28",
                "operation" : "GetItem",
                "key" : {
                    "userPairId" : { "S" : "${context.arguments.userPairId}" }
                }
            }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ChatAPISchemaE04B1A3A
      - ChatAPIuserPairConversationDS1CD48A8A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/userPairConversationDS/QuerydirectMessageConversationResolver/Resource
  ChatAPIcreateconversationDSServiceRoleF3C4CAC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/create_conversationDS/ServiceRole/Resource
  ChatAPIcreateconversationDSServiceRoleDefaultPolicyE3DC0FAB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - createconversationAF5C4C2E
                - Arn
        Version: "2012-10-17"
      PolicyName: ChatAPIcreateconversationDSServiceRoleDefaultPolicyE3DC0FAB
      Roles:
        - Ref: ChatAPIcreateconversationDSServiceRoleF3C4CAC2
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/create_conversationDS/ServiceRole/DefaultPolicy/Resource
  ChatAPIcreateconversationDS6618DC7D:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      Name: create_conversationDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - createconversationAF5C4C2E
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - ChatAPIcreateconversationDSServiceRoleF3C4CAC2
          - Arn
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/create_conversationDS/Resource
  ChatAPIcreateconversationDSMutationcreateConversationResolver3D3B52D0:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ChatAPID12E9E7A
          - ApiId
      FieldName: createConversation
      TypeName: Mutation
      DataSourceName: create_conversationDS
      Kind: UNIT
    DependsOn:
      - ChatAPIcreateconversationDS6618DC7D
      - ChatAPISchemaE04B1A3A
    Metadata:
      aws:cdk:path: ChatApiStack/ChatAPI/create_conversationDS/MutationcreateConversationResolver/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE1VQy3KDMAz8ltwdJdBDr03CpBdmmkKnd2HUxAFs6kc6jMf/XjAtbU7aXa2kWSWQJI+wXT3hl1nzutl4rjSBLy3yhhVklNOc2M4YsqN2FvLMDkoaqx237PAhT6ixI0t6Ii/O9i7Ky+SIR38trFAysOmKrweJnaor8G9YtdESQWACO/CFmrVYT6oVfIiHIgqsxa6qEXyOA+l30mZcPPXv+NFJbn8avzgw87DGKYiBmGfksHe8IbtHQwz73gySg3/W2F8+210vpvHIXvN7VvILdciymCSrMrRYLnn/sekN7W1+zoLzmODPFUJgUtUEV7O5JSmkW0hXVyPEWjtpRUdQzPUb/zmoA60BAAA=
    Metadata:
      aws:cdk:path: ChatApiStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameterscd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15S3Bucket8A718BE6:
    Type: String
    Description: S3 bucket for asset "cd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15"
  AssetParameterscd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15S3VersionKey98B77AA4:
    Type: String
    Description: S3 key for asset version "cd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15"
  AssetParameterscd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15ArtifactHash89D4D241:
    Type: String
    Description: Artifact hash for asset "cd65941c739bdff7654fcb1a2a1cc76b107710fa5cc00a2208186aea94d25a15"
  AssetParameters3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3S3Bucket2DB0068C:
    Type: String
    Description: S3 bucket for asset "3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3"
  AssetParameters3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3S3VersionKey9E40B7AA:
    Type: String
    Description: S3 key for asset version "3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3"
  AssetParameters3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3ArtifactHashD34EB50D:
    Type: String
    Description: Artifact hash for asset "3da3d3c96e882cb4d86560fd8f29d2404b7d79bcea07b7d2e7c1c0be32da19a3"
Outputs:
  chatapi:
    Description: Chat api endpoint
    Value:
      Fn::GetAtt:
        - ChatAPID12E9E7A
        - GraphQLUrl
    Export:
      Name: chatApiEndpoint
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

